{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { googleSignInSuccess, googleSignInFailure } from './user.actions';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = userRef.get();\n    yield put(googleSignInSuccess(userSnapshot));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/ivan.katsenia/Work/test-react-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","googleSignInSuccess","googleSignInFailure","googleProvider","auth","createUserProfileDocument","UserActionTypes","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SACEA,UADF,EACcC,GADd,EACmBC,GADnB,EACwBC,IADxB,QAEO,oBAFP;AAGA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,gBAAzD;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBN,cAArB,CAAvB;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACK,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAGD,OAAO,CAACE,GAAR,EAArB;AACA,UAAMd,GAAG,CAACG,mBAAmB,CAACU,YAAD,CAApB,CAAT;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAMf,GAAG,CAACI,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMjB,UAAU,CACdS,eAAe,CAACS,oBADF,EAEdR,gBAFc,CAAhB;AAID;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAMjB,GAAG,CAAC,CACRC,IAAI,CAACc,mBAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import {\n  takeLatest, put, all, call,\n} from 'redux-saga/effects';\nimport { googleSignInSuccess, googleSignInFailure } from './user.actions';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = userRef.get();\n    yield put(googleSignInSuccess(userSnapshot));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(\n    UserActionTypes.GOOGLE_SIGN_IN_START,\n    signInWithGoogle,\n  );\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}