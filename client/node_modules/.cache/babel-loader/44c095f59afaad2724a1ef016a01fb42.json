{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield put(signInSuccess(userAuth));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n    yield put(signUpSuccess());\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckCurrentUser() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckCurrentUser), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/Users/ivan.katsenia/Work/test-react-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","googleProvider","auth","createUserProfileDocument","getCurrentUser","UserActionTypes","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckCurrentUser","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"AAAA,SACEA,UADF,EACcC,GADd,EACmBC,GADnB,EACwBC,IADxB,QAEO,oBAFP;AAGA,SACEC,aADF,EACiBC,aADjB,EACgCC,cADhC,EACgDC,cADhD,EACgEC,aADhE,EAC+EC,aAD/E,QAEO,gBAFP;AAGA,SACEC,cADF,EACkBC,IADlB,EACwBC,yBADxB,EACmDC,cADnD,QAEO,+BAFP;AAGA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4CC,cAA5C,EAA4D;AACjE,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMf,IAAI,CAACS,yBAAD,EAA4BI,QAA5B,EAAsCC,cAAtC,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMnB,GAAG,CAACG,aAAa,CAAC;AAAEiB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACI,aAAa,CAACkB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAACe,eAAL,CAAqBhB,cAArB,CAAvB;AACA,UAAMK,uBAAuB,CAACU,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACI,aAAa,CAACkB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMf,uBAAuB,CAACU,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACI,aAAa,CAACkB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMhB,QAAQ,GAAG,MAAMH,cAAc,EAArC;AACA,QAAI,CAACG,QAAL,EAAe;AACf,UAAMf,GAAG,CAACG,aAAa,CAACY,QAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOO,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACI,aAAa,CAACkB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUU,OAAV,GAAoB;AACzB,MAAI;AACF,UAAMtB,IAAI,CAACsB,OAAL,EAAN;AACA,UAAMhC,GAAG,CAACK,cAAc,EAAf,CAAT;AACD,GAHD,CAGE,OAAOiB,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACM,cAAc,CAACgB,KAAD,CAAf,CAAT;AACD;AACF;AAED,OAAO,UAAUW,MAAV,CAAiB;AAAEN,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBK,IAAAA;AAAnB;AAAX,CAAjB,EAAgE;AACrE,MAAI;AACF,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAACyB,8BAAL,CAAoCP,KAApC,EAA2CC,QAA3C,CAAvB;AACA,UAAMlB,yBAAyB,CAACa,IAAD,EAAO;AAAEU,MAAAA;AAAF,KAAP,CAA/B;AACA,UAAMlC,GAAG,CAACO,aAAa,EAAd,CAAT;AACD,GAJD,CAIE,OAAOe,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACQ,aAAa,CAACc,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUc,mBAAV,GAAgC;AACrC,QAAMrC,UAAU,CACdc,eAAe,CAACwB,oBADF,EAEdd,gBAFc,CAAhB;AAID;AAED,OAAO,UAAUe,kBAAV,GAA+B;AACpC,QAAMvC,UAAU,CACdc,eAAe,CAAC0B,mBADF,EAEdb,eAFc,CAAhB;AAID;AAED,OAAO,UAAUc,kBAAV,GAA+B;AACpC,QAAMzC,UAAU,CACdc,eAAe,CAAC4B,kBADF,EAEdV,mBAFc,CAAhB;AAID;AAED,OAAO,UAAUW,cAAV,GAA2B;AAChC,QAAM3C,UAAU,CACdc,eAAe,CAAC8B,cADF,EAEdX,OAFc,CAAhB;AAID;AAED,OAAO,UAAUY,aAAV,GAA0B;AAC/B,QAAM7C,UAAU,CACdc,eAAe,CAACgC,aADF,EAEdZ,MAFc,CAAhB;AAID;AAED,OAAO,UAAUa,SAAV,GAAsB;AAC3B,QAAM7C,GAAG,CAAC,CACRC,IAAI,CAACkC,mBAAD,CADI,EAERlC,IAAI,CAACoC,kBAAD,CAFI,EAGRpC,IAAI,CAACsC,kBAAD,CAHI,EAIRtC,IAAI,CAACwC,cAAD,CAJI,EAKRxC,IAAI,CAAC0C,aAAD,CALI,CAAD,CAAT;AAOD","sourcesContent":["import {\n  takeLatest, put, all, call,\n} from 'redux-saga/effects';\nimport {\n  signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure,\n} from './user.actions';\nimport {\n  googleProvider, auth, createUserProfileDocument, getCurrentUser,\n} from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield put(signInSuccess(userAuth));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserProfileDocument(user, { displayName });\n    yield put(signUpSuccess());\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(\n    UserActionTypes.GOOGLE_SIGN_IN_START,\n    signInWithGoogle,\n  );\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(\n    UserActionTypes.EMAIL_SIGN_IN_START,\n    signInWithEmail,\n  );\n}\n\nexport function* onCheckCurrentUser() {\n  yield takeLatest(\n    UserActionTypes.CHECK_USER_SESSION,\n    isUserAuthenticated,\n  );\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(\n    UserActionTypes.SIGN_OUT_START,\n    signOut,\n  );\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(\n    UserActionTypes.SIGN_UP_START,\n    signUp,\n  );\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckCurrentUser),\n    call(onSignOutStart),\n    call(onSignUpStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}