{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\n\nfunction* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/ivan.katsenia/Work/test-react-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","signInSuccess","signInFailure","googleProvider","auth","createUserProfileDocument","UserActionTypes","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SACEA,UADF,EACcC,GADd,EACmBC,GADnB,EACwBC,IADxB,QAEO,oBAFP;AAGA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,OAAOC,eAAP,MAA4B,cAA5B;;AAEA,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAC1C,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACK,yBAAD,EAA4BG,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACG,aAAa,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACI,aAAa,CAACY,KAAD,CAAd,CAAT;AACD;AACF;;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,IAAI,CAACa,eAAL,CAAqBd,cAArB,CAAvB;AACAI,IAAAA,uBAAuB,CAACS,IAAD,CAAvB;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACI,aAAa,CAACY,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMZ,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACAd,IAAAA,uBAAuB,CAACS,IAAD,CAAvB;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACI,aAAa,CAACY,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACrC,QAAM1B,UAAU,CACdS,eAAe,CAACkB,oBADF,EAEdT,gBAFc,CAAhB;AAID;AAED,OAAO,UAAUU,kBAAV,GAA+B;AACpC,QAAM5B,UAAU,CACdS,eAAe,CAACoB,mBADF,EAEdR,eAFc,CAAhB;AAID;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM5B,GAAG,CAAC,CACRC,IAAI,CAACuB,mBAAD,CADI,EAERvB,IAAI,CAACyB,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import {\n  takeLatest, put, all, call,\n} from 'redux-saga/effects';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\n\nfunction* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(\n    UserActionTypes.GOOGLE_SIGN_IN_START,\n    signInWithGoogle,\n  );\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(\n    UserActionTypes.EMAIL_SIGN_IN_START,\n    signInWithEmail,\n  );\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}